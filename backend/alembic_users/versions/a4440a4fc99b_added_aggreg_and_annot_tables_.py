"""added annotation_task_groups and aggregated_annotations tables

Revision ID: a4440a4fc99b
Revises: 9e2410d7be5b
Create Date: 2017-11-03 15:45:47.071204

"""

# revision identifiers, used by Alembic.
revision = 'a4440a4fc99b'
down_revision = '9e2410d7be5b'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('annotation_task_groups',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('annotation_task_ids', postgresql.ARRAY(sa.BigInteger(), as_tuple=sa.ForeignKey('annotation_tasks.id')), nullable=True),
    sa.Column('arbitrary_tags', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_annotation_task_groups_name'), 'annotation_task_groups', ['name'], unique=False)
    op.create_table('aggregated_annotations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('annotation_task_group_id', sa.BigInteger(), nullable=True),
    sa.Column('doc_id', sa.BigInteger(), nullable=True),
    sa.Column('topic_id', sa.BigInteger(), nullable=True),
    sa.Column('is_gold_standard', sa.Boolean(), nullable=True),
    sa.Column('is_active_for_gold_annotation', sa.Boolean(), nullable=True),
    sa.Column('gold_difficulty', sa.Text(), nullable=True),
    sa.Column('arbitrary_tags', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('is_in_agreement', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['annotation_task_group_id'], ['annotation_task_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aggregated_annotations_annotation_task_group_id'), 'aggregated_annotations', ['annotation_task_group_id'], unique=False)
    op.create_index(op.f('ix_aggregated_annotations_doc_id'), 'aggregated_annotations', ['doc_id'], unique=False)
    op.create_index(op.f('ix_aggregated_annotations_gold_difficulty'), 'aggregated_annotations', ['gold_difficulty'], unique=False)
    op.create_index(op.f('ix_aggregated_annotations_is_active_for_gold_annotation'), 'aggregated_annotations', ['is_active_for_gold_annotation'], unique=False)
    op.create_index(op.f('ix_aggregated_annotations_is_gold_standard'), 'aggregated_annotations', ['is_gold_standard'], unique=False)
    op.create_index(op.f('ix_aggregated_annotations_is_in_agreement'), 'aggregated_annotations', ['is_in_agreement'], unique=False)
    op.create_index(op.f('ix_aggregated_annotations_topic_id'), 'aggregated_annotations', ['topic_id'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_aggregated_annotations_topic_id'), table_name='aggregated_annotations')
    op.drop_index(op.f('ix_aggregated_annotations_is_in_agreement'), table_name='aggregated_annotations')
    op.drop_index(op.f('ix_aggregated_annotations_is_gold_standard'), table_name='aggregated_annotations')
    op.drop_index(op.f('ix_aggregated_annotations_is_active_for_gold_annotation'), table_name='aggregated_annotations')
    op.drop_index(op.f('ix_aggregated_annotations_gold_difficulty'), table_name='aggregated_annotations')
    op.drop_index(op.f('ix_aggregated_annotations_doc_id'), table_name='aggregated_annotations')
    op.drop_index(op.f('ix_aggregated_annotations_annotation_task_group_id'), table_name='aggregated_annotations')
    op.drop_table('aggregated_annotations')
    op.drop_index(op.f('ix_annotation_task_groups_name'), table_name='annotation_task_groups')
    op.drop_table('annotation_task_groups')
    ### end Alembic commands ###
