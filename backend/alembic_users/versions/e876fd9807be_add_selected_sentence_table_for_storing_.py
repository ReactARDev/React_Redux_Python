"""add selected sentence table for storing results from slot tool

Revision ID: e876fd9807be
Revises: ed860c399094
Create Date: 2018-01-16 19:07:00.700976

"""

# revision identifiers, used by Alembic.
revision = 'e876fd9807be'
down_revision = 'ed860c399094'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence, CreateSequence

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('selected_sentences',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('doc_id', sa.BigInteger(), nullable=True),
    sa.Column('annotation_job_id', sa.BigInteger(), nullable=True),
    sa.Column('annotation_task_id', sa.BigInteger(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('is_gold_evaluation', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('index_build', sa.Text(), nullable=True),
    sa.Column('slot_type', sa.Text(), nullable=True),
    sa.Column('task_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['annotation_job_id'], ['annotation_jobs.id'], ),
    sa.ForeignKeyConstraint(['annotation_task_id'], ['annotation_tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    #op.execute(CreateSequence(Sequence('selected_sentences_id_seq')))
    op.create_index(op.f('ix_selected_sentences_annotation_job_id'), 'selected_sentences', ['annotation_job_id'], unique=False)
    op.create_index(op.f('ix_selected_sentences_annotation_task_id'), 'selected_sentences', ['annotation_task_id'], unique=False)
    op.create_index(op.f('ix_selected_sentences_doc_id'), 'selected_sentences', ['doc_id'], unique=False)
    op.create_index(op.f('ix_selected_sentences_index_build'), 'selected_sentences', ['index_build'], unique=False)
    op.create_index(op.f('ix_selected_sentences_is_gold_evaluation'), 'selected_sentences', ['is_gold_evaluation'], unique=False)
    op.create_index(op.f('ix_selected_sentences_slot_type'), 'selected_sentences', ['slot_type'], unique=False)
    op.create_index(op.f('ix_selected_sentences_user_id'), 'selected_sentences', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_selected_sentences_user_id'), table_name='selected_sentences')
    op.drop_index(op.f('ix_selected_sentences_slot_type'), table_name='selected_sentences')
    op.drop_index(op.f('ix_selected_sentences_is_gold_evaluation'), table_name='selected_sentences')
    op.drop_index(op.f('ix_selected_sentences_index_build'), table_name='selected_sentences')
    op.drop_index(op.f('ix_selected_sentences_doc_id'), table_name='selected_sentences')
    op.drop_index(op.f('ix_selected_sentences_annotation_task_id'), table_name='selected_sentences')
    op.drop_index(op.f('ix_selected_sentences_annotation_job_id'), table_name='selected_sentences')
    op.drop_table('selected_sentences')
    # ### end Alembic commands ###
